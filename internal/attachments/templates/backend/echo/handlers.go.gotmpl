package main

import (
	"net/http"

	{{ if eq .TemplateEngine "templ" }}
	"{{ .ModuleName }}/templates"
	"{{ .ModuleName }}/templates/pages"
	{{ end }}
	"github.com/labstack/echo/v4"
)

// indexViewHandler handles a view for the index page.
func indexViewHandler(c echo.Context) error {
	{{ if eq .TemplateEngine "templ" }}
	// Set the response content type to HTML.
	c.Response().Header().Set(echo.HeaderContentType, echo.MIMETextHTML)

	// Define template functions.
	metaTags := pages.MetaTags(
		"gowebly, htmx example page, go with htmx",               // define meta keywords
		"Welcome to example! You're here because it worked out.", // define meta description
	)
	bodyContent := pages.BodyContent(
		"Welcome to example!",                // define h1 text
		"You're here because it worked out.", // define p text
	)

	// Render template layout.
	return templates.Layout(
		"Welcome to example!", // define title text
		metaTags, bodyContent,
	).Render(c.Request().Context(), c.Response().Writer)
	{{ else }}
	return c.Render(http.StatusOK, "templates/pages/index.html", nil)
	{{ end }}
}

// showContentAPIHandler handles an API endpoint to show content.
func showContentAPIHandler(c echo.Context) error {
	// Check, if the current request has a 'HX-Request' header.
	// For more information, see https://htmx.org/docs/#request-headers
	if c.Request().Header.Get("HX-Request") == "" || c.Request().Header.Get("HX-Request") != "true" {
		// If not, return HTTP 400 error.
		return echo.NewHTTPError(http.StatusBadRequest, "non-htmx request")
	}

	return c.String(http.StatusOK, "<p>ðŸŽ‰ Hello from <strong>htmx</strong>!<br>(<code>GET /api/show</code>)</p>")
}
