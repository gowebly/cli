package main

import (
	"errors"
	"net/http"
	{{ if eq .TemplateEngine "default" }}"path/filepath"{{ end }}

	{{ if eq .TemplateEngine "templ" }}
	"{{ .ModuleName }}/templates"
	"{{ .ModuleName }}/templates/pages"
	{{ else }}
	gowebly "github.com/gowebly/helpers"
	{{ end }}
	"github.com/gin-gonic/gin"
)

// indexViewHandler handles a view for the index page.
func indexViewHandler(c *gin.Context) {
	{{ if eq .TemplateEngine "templ" }}
	// Define template functions.
	metaTags := pages.MetaTags(
		"gowebly, htmx example page, go with htmx",               // define meta keywords
		"Welcome to example! You're here because it worked out.", // define meta description
	)
	bodyContent := pages.BodyContent(
		"Welcome to example!",                // define h1 text
		"You're here because it worked out.", // define p text
	)

	// Render template layout.
	c.HTML(http.StatusOK, "", templates.Layout(
		"Welcome to example!", // define title text
		metaTags, bodyContent,
	))
	{{ else }}
	// Define paths to the user templates.
	indexPage := filepath.Join("templates", "pages", "index.html")

	// Parse user templates, using gowebly helper, or return error.
	tmpl, err := gowebly.ParseTemplates(indexPage)
	if err != nil {
		c.AbortWithError(
			http.StatusBadRequest,
			errors.New(http.StatusText(http.StatusBadRequest)),
		)
		return
	}

	// Execute (render) all templates or return error.
	if err := tmpl.Execute(c.Writer, nil); err != nil {
		c.AbortWithError(
			http.StatusInternalServerError,
			errors.New(http.StatusText(http.StatusInternalServerError)),
		)
		return
	}
	{{ end }}
}

// showContentAPIHandler handles an API endpoint to show content.
func showContentAPIHandler(c *gin.Context) {
	// Check, if the current request has a 'HX-Request' header.
	// For more information, see https://htmx.org/docs/#request-headers
	if c.GetHeader("HX-Request") == "" || c.GetHeader("HX-Request") != "true" {
		// If not, return HTTP 400 error.
		c.AbortWithError(http.StatusBadRequest, errors.New("non-htmx request"))
		return
	}

	c.String(http.StatusOK, "<p>ðŸŽ‰ Hello from <strong>htmx</strong>!<br>(<code>GET /api/show</code>)</p>")
}
